interface MyFloat {
  mant : uint
  exp : uint
  sign : bool
}

interface UnaryOpIO {
  in <- MyFloat
  out -> MyFloat
}

mod MyDuplicationUnit(io : UnaryOpIO) {
//  wire MyFloat result
//  reg MyFloat pipe
//  result.significand = io.in.significand
//  result.sign = io.in.sign
//  result.exponent = io.in.exponent + 1
//  pipe = result
//  io.out = pipe
}


